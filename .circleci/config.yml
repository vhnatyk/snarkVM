version: 2.1

orbs:
  windows: circleci/windows@2.4.0

commands:
  check_windows:
    description: "Runs cargo check on Windows"
    parameters:
      workspace_member:
        type: string
    steps:
      - checkout
      - restore_cache:
          key: cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: "Install Rust and run cargo check"
          command: |
            $ProgressPreference = "SilentlyContinue"
            Invoke-WebRequest -Uri "https://win.rustup.rs/" -OutFile "C:\rustup-init.exe"
            & C:\rustup-init.exe -y --default-toolchain "stable-x86_64-pc-windows-msvc" --no-modify-path --profile minimal
            $env:Path += ";C:\Users\circleci\.cargo\bin"
            rustc -Vv
            cargo --version
            rustc --version | Out-File -FilePath "rust-version"
            if (!(Test-Path "Cargo.lock" -PathType Leaf)) {
                cargo generate-lockfile
            }
            cd << parameters.workspace_member >>
            cargo check --examples --benches --tests
      - save_cache:
          paths:
            - C:\Users\circleci\.cargo\registry
            - C:\Users\circleci\.cargo\git
            - target
          key: cargo-cache-{{ arch }}-{{ checksum "rust-version" }}-{{ checksum "Cargo.lock" }}

  setup_environment:
    description: "Setup testing environment"
    parameters:
      cache_key:
        type: string
        default: snarkvm-stable-cache
    steps:
      - run: set -e
      - setup_remote_docker
      - run:
          name: Prepare environment and install dependencies
          command: |
            export SCCACHE_CACHE_SIZE=200M
            export WORK_DIR="$CIRCLE_WORKING_DIRECTORY/.cache/sccache"
            export SCCACHE_DIR="$CIRCLE_WORKING_DIRECTORY/.cache/sccache"
            mkdir -p "$CIRCLE_WORKING_DIRECTORY/.bin"
            wget https://github.com/mozilla/sccache/releases/download/0.2.13/sccache-0.2.13-x86_64-unknown-linux-musl.tar.gz
            tar -C "$CIRCLE_WORKING_DIRECTORY/.bin" -xvf sccache-0.2.13-x86_64-unknown-linux-musl.tar.gz
            mv $CIRCLE_WORKING_DIRECTORY/.bin/sccache-0.2.13-x86_64-unknown-linux-musl/sccache $CIRCLE_WORKING_DIRECTORY/.bin/sccache
            export PATH="$PATH:$CIRCLE_WORKING_DIRECTORY/.bin"
            export RUSTC_WRAPPER="sccache"
            rm -rf "$CIRCLE_WORKING_DIRECTORY/.cargo/registry"
            sudo apt-get update && sudo apt-get install -y clang llvm-dev llvm pkg-config xz-utils make libssl-dev libssl-dev
      - restore_cache:
          keys:
            - << parameters.cache_key >>

  clear_environment:
    description: "Clear environment"
    parameters:
      cache_key:
        type: string
        default: snarkvm-stable-cache
    steps:
      - run: (sccache -s||true)
      - run: set +e
      - save_cache:
          key: << parameters.cache_key >>
          paths:
            - .cache/sccache
            - .cargo

  run_serial:
    description: "Build and run tests"
    parameters:
      workspace_member:
        type: string
      cache_key:
        type: string
      flags:
        type: string
        default: ""
    steps:
      - checkout
      - setup_environment:
          cache_key: << parameters.cache_key >>
      - run:
          no_output_timeout: 30m
          command: cd << parameters.workspace_member >> && RUST_MIN_STACK=67108864 cargo test
      - clear_environment:
          cache_key: << parameters.cache_key >>

  run_parallel:
    description: "Build and run tests (in parallel)"
    parameters:
      workspace_member:
        type: string
      cache_key:
        type: string
      flags:
        type: string
        default: ""
    steps:
      - checkout
      - setup_environment:
          cache_key: << parameters.cache_key >>
      - run:
          no_output_timeout: 30m
          command: |
            cd << parameters.workspace_member >>
            cargo test -- --list --format terse | sed 's/: test//' > test_names.txt
            TEST_NAMES=$(circleci tests split test_names.txt)
            for i in $(echo $TEST_NAMES | sed "s/ / /g")
            do
                RUST_MIN_STACK=67108864 cargo test $i << parameters.flags >>
            done
      - clear_environment:
          cache_key: << parameters.cache_key >>

jobs:
  integration:
    docker:
      - image: cimg/rust:1.59
    resource_class: 2xlarge
    steps:
      - run_serial:
          workspace_member: .integration
          cache_key: snarkvm-integration-cache

  algorithms:
    docker:
      - image: cimg/rust:1.59
    resource_class: 2xlarge
    steps:
      - run_parallel:
          workspace_member: algorithms
          cache_key: snarkvm-algorithms-cache

  bytecode:
    docker:
      - image: cimg/rust:1.59
    resource_class: xlarge
    steps:
      - run_serial:
          workspace_member: bytecode
          cache_key: snarkvm-bytecode-cache

  circuits:
    docker:
      - image: cimg/rust:1.59
    resource_class: xlarge
    steps:
      - run_serial:
          workspace_member: circuits
          cache_key: snarkvm-circuits-cache

  circuits-core:
    docker:
      - image: cimg/rust:1.59
    resource_class: xlarge
    steps:
      - run_serial:
          workspace_member: circuits/core
          cache_key: snarkvm-circuits-core-cache

  circuits-edge:
    docker:
      - image: cimg/rust:1.59
    resource_class: xlarge
    steps:
      - run_serial:
          workspace_member: circuits/edge
          cache_key: snarkvm-circuits-edge-cache

  circuits-environment:
    docker:
      - image: cimg/rust:1.59
    resource_class: xlarge
    steps:
      - run_serial:
          workspace_member: circuits/environment
          cache_key: snarkvm-circuits-environment-cache

  circuits-types:
    docker:
      - image: cimg/rust:1.59
    resource_class: xlarge
    steps:
      - run_serial:
          workspace_member: circuits/types
          cache_key: snarkvm-circuits-types-cache

  circuits-types-address:
    docker:
      - image: cimg/rust:1.59
    resource_class: xlarge
    steps:
      - run_serial:
          workspace_member: circuits/types/address
          cache_key: snarkvm-circuits-types-address-cache

  circuits-types-boolean:
    docker:
      - image: cimg/rust:1.59
    resource_class: xlarge
    steps:
      - run_serial:
          workspace_member: circuits/types/boolean
          cache_key: snarkvm-circuits-types-boolean-cache

  circuits-types-field:
    docker:
      - image: cimg/rust:1.59
    resource_class: xlarge
    steps:
      - run_serial:
          workspace_member: circuits/types/field
          cache_key: snarkvm-circuits-types-field-cache

  circuits-types-group:
    docker:
      - image: cimg/rust:1.59
    resource_class: xlarge
    steps:
      - run_serial:
          workspace_member: circuits/types/group
          cache_key: snarkvm-circuits-types-group-cache

  circuits-types-integers:
    docker:
      - image: cimg/rust:1.59
    resource_class: 2xlarge
    steps:
      - run_serial:
          workspace_member: circuits/types/integers
          cache_key: snarkvm-circuits-types-integers-cache

  circuits-types-scalar:
    docker:
      - image: cimg/rust:1.59
    resource_class: xlarge
    steps:
      - run_serial:
          workspace_member: circuits/types/scalar
          cache_key: snarkvm-circuits-types-scalar-cache

  circuits-types-string:
    docker:
      - image: cimg/rust:1.59
    resource_class: xlarge
    steps:
      - run_serial:
          workspace_member: circuits/types/string
          cache_key: snarkvm-circuits-types-string-cache

  curves:
    docker:
      - image: cimg/rust:1.59
    resource_class: xlarge
    steps:
      - run_serial:
          workspace_member: curves
          cache_key: snarkvm-curves-cache

  dpc:
    docker:
      - image: cimg/rust:1.59
    resource_class: 2xlarge
    steps:
      - run_serial:
          workspace_member: dpc
          cache_key: snarkvm-dpc-cache

  fields:
    docker:
      - image: cimg/rust:1.59
    resource_class: xlarge
    steps:
      - run_serial:
          workspace_member: fields
          cache_key: snarkvm-fields-cache

  gadgets:
    docker:
      - image: cimg/rust:1.59
    resource_class: xlarge
    steps:
      - run_serial:
          workspace_member: gadgets
          cache_key: snarkvm-gadgets-cache
          flags: --features core,nonnative

  parameters:
    docker:
      - image: cimg/rust:1.59
    resource_class: xlarge
    steps:
      - run_serial:
          workspace_member: parameters
          cache_key: snarkvm-parameters-cache

  r1cs:
    docker:
      - image: cimg/rust:1.59
    resource_class: xlarge
    steps:
      - run_serial:
          workspace_member: r1cs
          cache_key: snarkvm-r1cs-cache

  utilities:
    docker:
      - image: cimg/rust:1.59
    resource_class: xlarge
    steps:
      - run_serial:
          workspace_member: utilities
          cache_key: snarkvm-utilities-cache

  utilities-derives:
    docker:
      - image: cimg/rust:1.59
    resource_class: xlarge
    steps:
      - run_serial:
          workspace_member: utilities/derives
          cache_key: snarkvm-utilities-derives-cache

  wasm:
    docker:
      - image: cimg/rust:1.59
    resource_class: 2xlarge
    steps:
      - checkout
      - setup_environment:
          cache_key: snarkvm-wasm-cache
      - run:
          no_output_timeout: 30m
          command: |
            sudo apt-get install nodejs
            curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
            cd wasm && wasm-pack test --node
            # cargo test --target wasm32-unknown-unknown --features wasm
      - clear_environment:
          cache_key: snarkvm-wasm-cache

  check-fmt:
    docker:
      - image: cimg/rust:1.59
    resource_class: xlarge
    steps:
      - checkout
      - setup_environment:
          cache_key: snarkvm-fmt-cache
      - run:
          name: Check style
          no_output_timeout: 35m
          command: |
            rustup toolchain install nightly-x86_64-unknown-linux-gnu
            cargo +nightly fmt --all -- --check
      - clear_environment:
          cache_key: snarkvm-fmt-cache

  check-clippy:
    docker:
      - image: cimg/rust:1.59
    resource_class: 2xlarge
    steps:
      - checkout
      - setup_environment:
          cache_key: snarkos-clippy-cache
      - run:
          name: Check lint
          no_output_timeout: 35m
          command: |
            rustup toolchain install nightly-x86_64-unknown-linux-gnu
            cargo +nightly clippy --workspace --all-targets -- -D warnings
            cargo +nightly clippy --workspace --all-targets --all-features -- -D warnings
      - clear_environment:
          cache_key: snarkos-clippy-cache

  verify-windows:
    executor:
      name: windows/default
      size: 2xlarge
    environment:
      CARGO_NET_GIT_FETCH_WITH_CLI: "true"
    parameters:
      workspace_member:
        type: string
    steps:
      - check_windows:
          workspace_member: << parameters.workspace_member >>

workflows:
  version: 2

  main-workflow:
    jobs:
      - integration
      - algorithms
      - bytecode
      - circuits
      - circuits-core
      - circuits-edge
      - circuits-environment
      - circuits-types
      - circuits-types-address
      - circuits-types-boolean
      - circuits-types-field
      - circuits-types-group
      - circuits-types-integers
      - circuits-types-scalar
      - circuits-types-string
      - curves
      - dpc
      - fields
      - gadgets
      - parameters
      - r1cs
      - utilities
      - utilities-derives
      - wasm
      - check-fmt
      - check-clippy

  windows-workflow:
    jobs:
      - verify-windows:
          matrix:
            parameters:
              workspace_member: [
                .integration,
                algorithms,
                bytecode,
                circuits,
                curves,
                dpc,
                fields,
                gadgets,
                parameters,
                r1cs,
                utilities
              ]
